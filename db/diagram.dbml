enum user_role {
    user
    employee
    admin
}

enum category_type {
    shop
    product
}

Table users {
    user_id int [pk, increment]
    email varchar(100) [not null, unique]
    display_name varchar(100) [not null]
    password_hash varchar(255) [not null]
    role user_role [not null]
    shop_id int [null]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Table shops {
    shop_id int [pk, increment]
    name varchar(255) [not null]
    address varchar(255) [not null]
    latitude double [not null]
    longitude double [not null]
    phone_number varchar(20) [not null]
    description varchar(512) [not null]
    disabled bool [not null, default: TRUE]
    user_id int [not null]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Ref: users.user_id - shops.user_id
Ref: shops.shop_id - users.shop_id

Table products {
    product_id int [pk, increment]
    name varchar(255) [not null]
    price double [not null]
    description varchar(512) [not null]
    disabled bool [not null, default: TRUE]
    shop_id int [not null]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Ref: products.shop_id > shops.shop_id

Table photos {
    photo_id int [pk, increment]
    photo blob [not null]
}

Table shop_photo {
    photo_id int [not null]
    shop_id int [not null]
    indexes {
        (photo_id, shop_id) [pk]
    }
}

Ref: shop_photo.photo_id > photos.photo_id
Ref: shop_photo.shop_id > shops.shop_id

Table product_photo {
  photo_id int [not null]
  product_id int [not null]
  indexes {
      (photo_id, product_id) [pk]
  }
}

Ref: product_photo.photo_id > photos.photo_id
Ref: product_photo.product_id > products.product_id

Table categories {
    category_id int [pk, increment]
    type category_type [not null]
    name varchar(50) [not null]
    disabled bool [not null, default: TRUE]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Table shop_category {
    category_id int [not null]
    shop_id int [not null]
    indexes {
        (category_id, shop_id) [pk]
    }
}

Ref: shop_category.category_id > categories.category_id
Ref: shop_category.shop_id > shops.shop_id

Table product_category {
  category_id int [not null]
  product_id int [not null]
  indexes {
      (category_id, product_id) [pk]
  }
}

Ref: product_category.category_id > categories.category_id
Ref: product_category.product_id > products.product_id

Table comments {
    comment_id int [pk, increment]
    shop_id int [null]
    product_id int [null]
    author_id int [not null]
    content varchar(512) [not null]
    parent_comment_id int [null, default: NULL]
    created_at datetime [not null, default: `now()`]
}

Ref: comments.shop_id > shops.shop_id
Ref: comments.product_id > products.product_id
Ref: comments.author_id > users.user_id
Ref: comments.parent_comment_id > comments.comment_id

Table shop_ratings {
    shop_id int [not null]
    user_id int [not null]
    rating int [not null]
    indexes {
        (shop_id, user_id) [pk]
    }
}

Ref: shop_ratings.shop_id > shops.shop_id
Ref: shop_ratings.user_id > users.user_id

Table product_ratings {
    product_id int [not null]
    user_id int [not null]
    rating int [not null]
    indexes {
        (product_id, user_id) [pk]
    }
}

Ref: product_ratings.product_id > products.product_id
Ref: product_ratings.user_id > users.user_id

Table comment_votes {
    comment_id int [not null]
    user_id int [not null]
    value int [not null]
    indexes {
        (comment_id, user_id) [pk]
    }
}

Ref: comment_votes.comment_id > comments.comment_id
Ref: comment_votes.user_id > users.user_id

Table sessions {
    session_id int [pk, increment]
    user_id int [not null]
    token varchar(255) [not null, unique]
    created_at datetime [not null, default: `now()`]
    last_access_at datetime [not null, default: `now()`]
}

Ref: sessions.user_id > users.user_id

Table forgot_password_tokens {
    token_id int [pk, increment]
    user_id int [not null]
    token varchar(255) [not null]
    created_at datetime [not null, default: `now()`]
}

Ref: forgot_password_tokens.user_id > users.user_id

enum homepage_block_type {
  feed
  banner
}

enum homepage_block_size {
  full
  half
  third
  fourth
  twelfth
}

Table homepage_blocks {
  block_id int [pk, increment]
  type homepage_block_type [not null]
  position int [not null]
  homepage_block_size homepage_block_size [not null, default: 'full']
}

enum feed_block_type {
  auto_trending
  auto_recent
  manual
}

enum feed_block_item_type {
  shop
  product
}

Table feed_blocks {
  feed_block_id int [pk, increment]
  block_id int [not null]
  type feed_block_type [not null]
  item_type feed_block_item_type [not null]
  max_size int [not null]
}

Ref: feed_blocks.block_id > homepage_blocks.block_id

Table feed_block_items {
  feed_block_id int [not null]
  shop_id int [null]
  product_id int [null]
}

Ref: feed_block_items.feed_block_id > feed_blocks.feed_block_id
Ref: feed_block_items.shop_id > shops.shop_id
Ref: feed_block_items.product_id > products.product_id

Table banner_blocks {
  banner_block_id int [pk, increment]
  block_id int [not null]
  title varchar(255) [null]
  text varchar(512) [null]
  photo_id int [null]
}

Ref: banner_blocks.block_id > homepage_blocks.block_id
Ref: banner_blocks.photo_id > photos.photo_id