enum user_role {
    user
    employee
    admin
}

Table users {
    user_id int [pk, increment]
    email varchar(100) [not null, unique]
    display_name varchar(100) [not null]
    password_hash varchar(255) [not null]
    role user_role [not null]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Table shops {
    shop_id int [pk, increment]
    name varchar(255) [not null]
    address varchar(255) [not null]
    latitude double [not null]
    longitude double [not null]
    phone_number varchar(20) [not null]
    description varchar(512) [not null]
    disabled bool [not null, default: TRUE]
    user_id int [not null]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Ref: shops.user_id > users.user_id

Table shop_photos {
    shop_photo_id int [pk, increment]
    shop_id int [not null]
    photo blob [not null]
}

Ref: shop_photos.shop_id > shops.shop_id

Table products {
    product_id int [pk, increment]
    name varchar(255) [not null]
    price double [not null]
    description varchar(512) [not null]
    disabled bool [not null, default: TRUE]
    shop_id int [not null]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Ref: products.shop_id > shops.shop_id

Table product_photos {
    product_photo_id int [pk, increment]
    product_id int [not null]
    photo blob [not null]
}

Ref: product_photos.product_id > products.product_id

Table shop_categories {
    shop_cat_id int [pk, increment]
    name varchar(50) [not null]
    disabled bool [not null, default: TRUE]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Table shop_cat_relation {
    shop_cat_id int [not null]
    shop_id int [not null]
    indexes {
        (shop_cat_id, shop_id) [pk]
    }
}

Ref: shop_cat_relation.shop_cat_id > shop_categories.shop_cat_id
Ref: shop_cat_relation.shop_id > shops.shop_id

Table product_categories {
    product_cat_id int [pk, increment]
    name varchar(50) [not null]
    disabled bool [not null, default: TRUE]
    created_at datetime [not null, default: `now()`]
    updated_at datetime [not null, default: `now()`]
}

Table prod_cat_relation {
  product_cat_id int [not null]
  product_id int [not null]
  indexes {
      (product_cat_id, product_id) [pk]
  }
}

Ref: prod_cat_relation.product_cat_id > product_categories.product_cat_id
Ref: prod_cat_relation.product_id > products.product_id

Table comments {
    comment_id int [pk, increment]
    author_id int [not null]
    content varchar(512) [not null]
    parent_comment_id int [null, default: NULL]
    created_at datetime [not null]
}

Ref: comments.author_id > users.user_id
Ref: comments.parent_comment_id > comments.comment_id

Table shop_ratings {
    shop_id int [not null]
    user_id int [not null]
    rating int [not null]
    indexes {
        (shop_id, user_id) [pk]
    }
}

Ref: shop_ratings.shop_id > shops.shop_id
Ref: shop_ratings.user_id > users.user_id

Table product_ratings {
    product_id int [not null]
    user_id int [not null]
    rating int [not null]
    indexes {
        (product_id, user_id) [pk]
    }
}

Ref: product_ratings.product_id > products.product_id
Ref: product_ratings.user_id > users.user_id

Table comment_votes {
    comment_id int [not null]
    user_id int [not null]
    value int [not null]
    indexes {
        (comment_id, user_id) [pk]
    }
}

Ref: comment_votes.comment_id > comments.comment_id
Ref: comment_votes.user_id > users.user_id

Table sessions {
    session_id int [pk, increment]
    user_id int [not null]
    token varchar(255) [not null, unique]
    created_at datetime [not null, default: `now()`]
    last_access_at datetime [not null, default: `now()`]
}

Ref: sessions.user_id > users.user_id

Table forgot_password_tokens {
    token_id int [increment]
    user_id int [not null]
    token varchar(255) [not null]
    indexes {
        (token_id, user_id) [pk]
    }
}

Ref: forgot_password_tokens.user_id > users.user_id